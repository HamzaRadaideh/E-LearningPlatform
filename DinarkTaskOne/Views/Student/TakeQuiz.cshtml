@model DinarkTaskOne.Models.ViewModels.TakeQuizViewModel
@using DinarkTaskOne.Models.ViewModels
@using DinarkTaskOne.Models.MakeQuiz

<div class="container mt-5">
    <div class="row">
        <div class="col-lg-12">
            <div class="card shadow-sm border-0 mb-4">
                <div class="card-body">
                    <h2 class="card-title text-primary">@Model.QuizTitle</h2>

                    <p>Quiz Duration (in seconds): @Model.Duration.TotalSeconds</p>

                    <div class="alert alert-warning text-center" role="alert">
                        <strong>Time Left:</strong> <span id="quiz-timer"></span>
                    </div>

                    <form asp-action="SubmitQuiz" method="post">
                        <input type="hidden" name="AttemptId" value="@ViewBag.AttemptId" />

                        @for (int i = 0; i < Model.Questions.Count; i++)
                        {
                            var question = Model.Questions[i];
                            <div class="mb-4">
                                <h4>Question @(i + 1): @question.Text</h4>

                                @if (question.Type == DinarkTaskOne.Models.MakeQuiz.QuestionType.MultipleChoice || question.Type == DinarkTaskOne.Models.MakeQuiz.QuestionType.TrueFalse)
                                {
                                    @foreach (var answer in question.Answers)
                                    {
                                        <div class="form-check">
                                            <input class="form-check-input" type="radio" name="SelectedAnswers[@question.QuestionId]" value="@answer.AnswerId" id="answer-@answer.AnswerId" required />
                                            <label class="form-check-label" for="answer-@answer.AnswerId">@answer.Text</label>
                                        </div>
                                    }
                                }
                                else if (question.Type == DinarkTaskOne.Models.MakeQuiz.QuestionType.MultipleAnswers)
                                {
                                    @foreach (var answer in question.Answers)
                                    {
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" name="SelectedAnswers[@question.QuestionId]" value="@answer.AnswerId" id="answer-@answer.AnswerId" />
                                            <label class="form-check-label" for="answer-@answer.AnswerId">@answer.Text</label>
                                        </div>
                                    }
                                }
                            </div>
                        }

                        <div class="text-center mt-4">
                            <button type="submit" class="btn btn-primary btn-lg">Submit Quiz</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Timer Script -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Get the duration in seconds from the model
        var duration = parseInt('@Model.Duration.TotalSeconds');
        console.log("Duration passed to timer: ", duration);

        // Get the timer display element by its ID
        var timerDisplay = document.getElementById('quiz-timer');
        var timer = duration;

        // Function to update the timer
        function updateTimer() {
            var minutes = Math.floor(timer / 60);
            var seconds = timer % 60;

            // Ensure seconds are always two digits
            seconds = seconds < 10 ? '0' + seconds : seconds;

            // Update the timer display
            timerDisplay.textContent = `${minutes}:${seconds}`;

            // If time runs out, stop the timer and submit the form
            if (timer <= 0) {
                clearInterval(interval);
                console.log("Time is up! Submitting quiz...");
                document.querySelector('form').submit();  // Submit the form
            } else {
                timer--;  // Decrease the timer
            }
        }

        // Start the timer countdown
        var interval = setInterval(updateTimer, 1000);
        updateTimer();  // Initial call to update the timer display immediately
    });
</script>


